// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ClusterArgs } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterListArgs } from "./clusterList";
export type ClusterList = import("./clusterList").ClusterList;
export const ClusterList: typeof import("./clusterList").ClusterList = null as any;
utilities.lazyLoad(exports, ["ClusterList"], () => require("./clusterList"));

export { ClusterPatchArgs } from "./clusterPatch";
export type ClusterPatch = import("./clusterPatch").ClusterPatch;
export const ClusterPatch: typeof import("./clusterPatch").ClusterPatch = null as any;
utilities.lazyLoad(exports, ["ClusterPatch"], () => require("./clusterPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:management.cattle.io/v3:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "kubernetes:management.cattle.io/v3:ClusterList":
                return new ClusterList(name, <any>undefined, { urn })
            case "kubernetes:management.cattle.io/v3:ClusterPatch":
                return new ClusterPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "management.cattle.io/v3", _module)
