// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ClusterRepoArgs } from "./clusterRepo";
export type ClusterRepo = import("./clusterRepo").ClusterRepo;
export const ClusterRepo: typeof import("./clusterRepo").ClusterRepo = null as any;
utilities.lazyLoad(exports, ["ClusterRepo"], () => require("./clusterRepo"));

export { ClusterRepoListArgs } from "./clusterRepoList";
export type ClusterRepoList = import("./clusterRepoList").ClusterRepoList;
export const ClusterRepoList: typeof import("./clusterRepoList").ClusterRepoList = null as any;
utilities.lazyLoad(exports, ["ClusterRepoList"], () => require("./clusterRepoList"));

export { ClusterRepoPatchArgs } from "./clusterRepoPatch";
export type ClusterRepoPatch = import("./clusterRepoPatch").ClusterRepoPatch;
export const ClusterRepoPatch: typeof import("./clusterRepoPatch").ClusterRepoPatch = null as any;
utilities.lazyLoad(exports, ["ClusterRepoPatch"], () => require("./clusterRepoPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:catalog.cattle.io/v1:ClusterRepo":
                return new ClusterRepo(name, <any>undefined, { urn })
            case "kubernetes:catalog.cattle.io/v1:ClusterRepoList":
                return new ClusterRepoList(name, <any>undefined, { urn })
            case "kubernetes:catalog.cattle.io/v1:ClusterRepoPatch":
                return new ClusterRepoPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "catalog.cattle.io/v1", _module)
