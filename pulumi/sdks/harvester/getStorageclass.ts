// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageclass(args: GetStorageclassArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageclassResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harvester:index/getStorageclass:getStorageclass", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageclass.
 */
export interface GetStorageclassArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getStorageclass.
 */
export interface GetStorageclassResult {
    readonly allowVolumeExpansion: boolean;
    readonly description: string;
    readonly id: string;
    readonly isDefault: boolean;
    readonly message: string;
    readonly name: string;
    readonly parameters: {[key: string]: string};
    readonly reclaimPolicy: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly volumeBindingMode: string;
    readonly volumeProvisioner: string;
}
export function getStorageclassOutput(args: GetStorageclassOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStorageclassResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harvester:index/getStorageclass:getStorageclass", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageclass.
 */
export interface GetStorageclassOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
