// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSshKey(args: GetSshKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetSshKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harvester:index/getSshKey:getSshKey", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSshKey.
 */
export interface GetSshKeyArgs {
    id?: string;
    name: string;
    namespace?: string;
}

/**
 * A collection of values returned by getSshKey.
 */
export interface GetSshKeyResult {
    readonly description: string;
    readonly fingerprint: string;
    readonly id: string;
    readonly message: string;
    readonly name: string;
    readonly namespace?: string;
    readonly publicKey: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
}
export function getSshKeyOutput(args: GetSshKeyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSshKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harvester:index/getSshKey:getSshKey", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSshKey.
 */
export interface GetSshKeyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
